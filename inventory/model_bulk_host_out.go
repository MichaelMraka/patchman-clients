/*
 * Insights Host Inventory REST Interface
 *
 * REST interface for the Insights Platform Host Inventory application.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// BulkHostOut struct for BulkHostOut
type BulkHostOut struct {
	// List of hosts that were created, updated or failed to be processed.
	Data *[]BulkHostOutDetails `json:"data,omitempty"`
	// Number of items in the \"data\" list that contain errors.
	Errors *int32 `json:"errors,omitempty"`
	// Total number of items in the \"data\" list.
	Total *int32 `json:"total,omitempty"`
}

// NewBulkHostOut instantiates a new BulkHostOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkHostOut() *BulkHostOut {
	this := BulkHostOut{}
	return &this
}

// NewBulkHostOutWithDefaults instantiates a new BulkHostOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkHostOutWithDefaults() *BulkHostOut {
	this := BulkHostOut{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BulkHostOut) GetData() []BulkHostOutDetails {
	if o == nil || o.Data == nil {
		var ret []BulkHostOutDetails
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHostOut) GetDataOk() (*[]BulkHostOutDetails, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BulkHostOut) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []BulkHostOutDetails and assigns it to the Data field.
func (o *BulkHostOut) SetData(v []BulkHostOutDetails) {
	o.Data = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BulkHostOut) GetErrors() int32 {
	if o == nil || o.Errors == nil {
		var ret int32
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHostOut) GetErrorsOk() (*int32, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BulkHostOut) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given int32 and assigns it to the Errors field.
func (o *BulkHostOut) SetErrors(v int32) {
	o.Errors = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *BulkHostOut) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkHostOut) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *BulkHostOut) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *BulkHostOut) SetTotal(v int32) {
	o.Total = &v
}

func (o BulkHostOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableBulkHostOut struct {
	value *BulkHostOut
	isSet bool
}

func (v NullableBulkHostOut) Get() *BulkHostOut {
	return v.value
}

func (v *NullableBulkHostOut) Set(val *BulkHostOut) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkHostOut) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkHostOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkHostOut(val *BulkHostOut) *NullableBulkHostOut {
	return &NullableBulkHostOut{value: val, isSet: true}
}

func (v NullableBulkHostOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkHostOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


