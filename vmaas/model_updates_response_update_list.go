/*
 * VMaaS Webapp
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.20.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vmaas

import (
	"encoding/json"
)

// UpdatesResponseUpdateList struct for UpdatesResponseUpdateList
type UpdatesResponseUpdateList struct {
	AvailableUpdates *[]UpdatesResponseAvailableUpdates `json:"available_updates,omitempty"`
	Description *string `json:"description,omitempty"`
	Summary *string `json:"summary,omitempty"`
}

// NewUpdatesResponseUpdateList instantiates a new UpdatesResponseUpdateList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatesResponseUpdateList() *UpdatesResponseUpdateList {
	this := UpdatesResponseUpdateList{}
	return &this
}

// NewUpdatesResponseUpdateListWithDefaults instantiates a new UpdatesResponseUpdateList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatesResponseUpdateListWithDefaults() *UpdatesResponseUpdateList {
	this := UpdatesResponseUpdateList{}
	return &this
}

// GetAvailableUpdates returns the AvailableUpdates field value if set, zero value otherwise.
func (o *UpdatesResponseUpdateList) GetAvailableUpdates() []UpdatesResponseAvailableUpdates {
	if o == nil || o.AvailableUpdates == nil {
		var ret []UpdatesResponseAvailableUpdates
		return ret
	}
	return *o.AvailableUpdates
}

// GetAvailableUpdatesOk returns a tuple with the AvailableUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesResponseUpdateList) GetAvailableUpdatesOk() (*[]UpdatesResponseAvailableUpdates, bool) {
	if o == nil || o.AvailableUpdates == nil {
		return nil, false
	}
	return o.AvailableUpdates, true
}

// HasAvailableUpdates returns a boolean if a field has been set.
func (o *UpdatesResponseUpdateList) HasAvailableUpdates() bool {
	if o != nil && o.AvailableUpdates != nil {
		return true
	}

	return false
}

// SetAvailableUpdates gets a reference to the given []UpdatesResponseAvailableUpdates and assigns it to the AvailableUpdates field.
func (o *UpdatesResponseUpdateList) SetAvailableUpdates(v []UpdatesResponseAvailableUpdates) {
	o.AvailableUpdates = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdatesResponseUpdateList) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesResponseUpdateList) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdatesResponseUpdateList) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdatesResponseUpdateList) SetDescription(v string) {
	o.Description = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *UpdatesResponseUpdateList) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatesResponseUpdateList) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *UpdatesResponseUpdateList) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *UpdatesResponseUpdateList) SetSummary(v string) {
	o.Summary = &v
}

func (o UpdatesResponseUpdateList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailableUpdates != nil {
		toSerialize["available_updates"] = o.AvailableUpdates
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatesResponseUpdateList struct {
	value *UpdatesResponseUpdateList
	isSet bool
}

func (v NullableUpdatesResponseUpdateList) Get() *UpdatesResponseUpdateList {
	return v.value
}

func (v *NullableUpdatesResponseUpdateList) Set(val *UpdatesResponseUpdateList) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatesResponseUpdateList) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatesResponseUpdateList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatesResponseUpdateList(val *UpdatesResponseUpdateList) *NullableUpdatesResponseUpdateList {
	return &NullableUpdatesResponseUpdateList{value: val, isSet: true}
}

func (v NullableUpdatesResponseUpdateList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatesResponseUpdateList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


